<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>Do. Reflect. Learn. Repeat!</title>
    <link>http://blog.zsoldosp.eu</link>
    <description>Excercises in public learning</description>
    <pubDate>Thu, 08 Aug 2013 05:31:47 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>Find The Test Structure That Fits Your Team</title>
      <link>http://blog.zsoldosp.eu/2012/01/find-test-structure-that-fits-your-team.html</link>
      <pubDate>Thu, 12 Jan 2012 19:14:00 CET</pubDate>
      <category><![CDATA[documentation]]></category>
      <category><![CDATA[testing]]></category>
      <category><![CDATA[software]]></category>
      <guid isPermaLink="false">http://blog.zsoldosp.eu/2012/01/find-test-structure-that-fits-your-team.html</guid>
      <description>Find The Test Structure That Fits Your Team</description>
      <content:encoded><![CDATA[
<p>A number of recent posts by <a href="http://haacked.com/archive/2012/01/02/structuring-unit-tests.aspx">Phil Haack</a>, <a href="http://ayende.com/blog/152897/structuring-your-unit-tests-why">Ayende Rahien</a>, and <a href="http://www.typemock.com/blog/2012/01/11/do-tests-get-too-much-respect/">Gil Zilberfeld</a> dealt with the topic of test organization. Each approach has its pros and cons, but neither is a silver bullet. Your (and your team's, project's) context determines which approach is right.</p><br/><p>Without aiming to provide an exhaustive list, below are some questions that have influence on test organization:</p><br/><ul><br/><li>Is the team in a consulting project where test documentation is required as part of delivery? </li><br/><li>Is it a product team? Is the firm in its early stage or is it mature like Oracle with mature products?</li><br/><li>What is the turnover rate of the team? What are the plans for its growth? The team might have all the knowledge in their head, but if it'll double in size in a year, then the communication value of tests could increase.</li><br/><li>What is the maturity level of the team? How long have they been working together?</li><br/><li>How closely and often do team members collaborate? </li><br/><li>Is there <a href="http://www.extremeprogramming.org/rules/collective.html">collective code ownership</a>?</li><br/><li>How does the team and its customers communicate? Some customers can - and willing to - read code, some need English (Turkish/Hungarian/German/etc.). Some teams have a level of (grown and deserved) trust that just saying the software works is accepted, some need a more formal acceptance and regression process.</li><br/><li>Is there proper IDE support for discoverability? Do all people reporting bugs (as tests) have access to that IDE? If not so, how do they find examples of how to write the bug-report test?</li><br/></ul><br/><p>Feel free to add more questions in the comments!</p>]]></content:encoded>
    </item>
  </channel>
</rss>
